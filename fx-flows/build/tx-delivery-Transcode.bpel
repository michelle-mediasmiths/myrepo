<?xml version="1.0" encoding="UTF-8"?>
<bpel:process xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:pnlk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ode="http://www.apache.org/ode/type/extension" xmlns:isTaskCancelled="http://ns.mediasmithsforge.com/foxtel/wfAdapter/isTaskCancelled.rest" xmlns:tcFailure="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcFailure.rest" xmlns:deleteJob="http://ns.mediasmithsforge.com/foxtel/tcAdapter/deleteJob.rest" xmlns:FSAdapter="http://ns.mediasmiths.com/foxtel/fs/adapter" xmlns:setPriority="http://ns.mediasmithsforge.com/foxtel/tcAdapter/setPriority.rest" xmlns:delete="http://ns.mediasmithsforge.com/foxtel/fsAdapter/delete.rest" xmlns:Caller="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Caller" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:tcTotalFailure="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcTotalFailure.rest" xmlns:wfAdapter="http://ns.mediasmiths.com/foxtel/wf/adapter" xmlns:createJob="http://ns.mediasmithsforge.com/foxtel/tcAdapter/createJob.rest" xmlns:autoQCRequiredForTX="http://ns.mediasmithsforge.com/foxtel/wfAdapter/autoQCRequiredForTX.rest" xmlns:queryJob="http://ns.mediasmithsforge.com/foxtel/tcAdapter/queryJob.rest" xmlns:tcGetPriority="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcGetPriority.rest" xmlns:TX_Delivery="http://ns.mediasmithsforge.com/foxtel/tx-delivery" xmlns:TCAdapter="http://ns.mediasmithsforge.com/foxtel/tx-delivery/TCAdapter" xmlns:tcPassed="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcPassed.rest" xmlns:WFAdapter="http://ns.mediasmithsforge.com/foxtel/tx-delivery/WFAdapter" xmlns:fs="http://ns.mediasmithsforge.com/foxtel/tx-delivery/fs" xmlns:Auto_QC="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Auto_QC" xmlns:this="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Transcode" xmlns:Delivery="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Delivery" xmlns:tns="http://ns.mediasmiths.com/foxtel/tc/adapter" xmlns:bpmn="http://www.intalio.com/bpms" xmlns:atomic="http://ode.apache.org/atomicScope" queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" bpmn:label="Transcode" name="Transcode" bpmn:id="_i0TRQGuNEeK7FdvgH5F2kQ" targetNamespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Transcode">
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/fsAdapter/delete.rest" location="fsAdapter/delete.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tcAdapter/createJob.rest" location="tcAdapter/createJob.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tcAdapter/deleteJob.rest" location="tcAdapter/deleteJob.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tcAdapter/queryJob.rest" location="tcAdapter/queryJob.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tcAdapter/setPriority.rest" location="tcAdapter/setPriority.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/autoQCRequiredForTX.rest" location="wfAdapter/autoQCRequiredForTX.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/isTaskCancelled.rest" location="wfAdapter/isTaskCancelled.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcFailure.rest" location="wfAdapter/tcFailure.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcGetPriority.rest" location="wfAdapter/tcGetPriority.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcPassed.rest" location="wfAdapter/tcPassed.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcTotalFailure.rest" location="wfAdapter/tcTotalFailure.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery" location="tx-delivery.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Auto_QC" location="tx-delivery-Auto_QC.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Delivery" location="tx-delivery-Delivery.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Transcode" location="tx-delivery-Transcode.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:partnerLinks>
    <bpel:partnerLink name="transcodeAndCallerPlkVar" partnerLinkType="TX_Delivery:TranscodeAndCaller" myRole="Transcode_for_Caller"/>
    <bpel:partnerLink name="transcodeAndTCAdapterForHttpPortPlk0Var" partnerLinkType="TX_Delivery:TranscodeAndTCAdapterForHttpPortPlk0" initializePartnerRole="yes" partnerRole="TCAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndTCAdapterForHttpPortPlk2Var" partnerLinkType="TX_Delivery:TranscodeAndTCAdapterForHttpPortPlk2" initializePartnerRole="yes" partnerRole="TCAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk1Var" partnerLinkType="TX_Delivery:TranscodeAndWFAdapterForHttpPortPlk1" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk3Var" partnerLinkType="TX_Delivery:TranscodeAndWFAdapterForHttpPortPlk3" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndTCAdapterForHttpPortPlk3Var" partnerLinkType="TX_Delivery:TranscodeAndTCAdapterForHttpPortPlk3" initializePartnerRole="yes" partnerRole="TCAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndTCAdapterForHttpPortPlk1Var" partnerLinkType="TX_Delivery:TranscodeAndTCAdapterForHttpPortPlk1" initializePartnerRole="yes" partnerRole="TCAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk4Var" partnerLinkType="TX_Delivery:TranscodeAndWFAdapterForHttpPortPlk4" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk2Var" partnerLinkType="TX_Delivery:TranscodeAndWFAdapterForHttpPortPlk2" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndFsForHttpPortPlkVar" partnerLinkType="TX_Delivery:TranscodeAndFsForHttpPortPlk" initializePartnerRole="yes" partnerRole="fs_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk0Var" partnerLinkType="TX_Delivery:TranscodeAndWFAdapterForHttpPortPlk0" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="auto_QcAndTranscodePlkVar" partnerLinkType="TX_Delivery:Auto_QcAndTranscode" initializePartnerRole="yes" partnerRole="Auto_QC_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndDeliveryPlkVar" partnerLinkType="TX_Delivery:TranscodeAndDelivery" initializePartnerRole="yes" partnerRole="Delivery_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk5Var" partnerLinkType="TX_Delivery:TranscodeAndWFAdapterForHttpPortPlk5" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
  </bpel:partnerLinks>
  <bpel:variables>
    <bpel:variable name="thisEventStartMessageRequest" messageType="this:EventStartMessageRequest"/>
    <bpel:variable name="TranscodeSuccess" type="xs:boolean"/>
    <bpel:variable name="TranscodeErrorCount" type="xs:integer"/>
    <bpel:variable name="tcTotalFailureTcTotalFailureRequestMsg" messageType="tcTotalFailure:tcTotalFailure_input"/>
    <bpel:variable name="tcTotalFailureTcTotalFailureResponseMsg" messageType="tcTotalFailure:tcTotalFailure_output"/>
    <bpel:variable name="autoQCRequiredForTXAutoQcRequiredForTXRequestMsg" messageType="autoQCRequiredForTX:autoQcRequiredForTX_input"/>
    <bpel:variable name="autoQCRequiredForTXAutoQcRequiredForTXResponseMsg" messageType="autoQCRequiredForTX:autoQcRequiredForTX_output"/>
    <bpel:variable name="deliveryEventStartMessageRequest" messageType="Delivery:EventStartMessageRequest"/>
    <bpel:variable name="auto_QCEventStartMessageRequest" messageType="Auto_QC:EventStartMessageRequest"/>
    <bpel:variable name="isTaskCancelledIsCancelledRequestMsg" messageType="isTaskCancelled:isCancelled_input"/>
    <bpel:variable name="isTaskCancelledIsCancelledResponseMsg" messageType="isTaskCancelled:isCancelled_output"/>
    <bpel:variable name="TaskIsCancelled" type="xs:boolean"/>
    <bpel:variable name="TranscodeJobID" type="xs:string"/>
    <bpel:variable name="TranscodeJobResult" type="xs:string"/>
    <bpel:variable name="deliveryEventStartMessageResponse" messageType="Delivery:EventStartMessageResponse"/>
    <bpel:variable name="TCFilePath" type="xs:string"/>
    <bpel:variable name="auto_QCEventStartMessageResponse" messageType="Auto_QC:EventStartMessageResponse"/>
    <bpel:variable name="tcPriority" type="xs:int"/>
  </bpel:variables>
  <bpel:sequence>
    <bpel:receive partnerLink="transcodeAndCallerPlkVar" portType="this:ForCaller" operation="EventStartMessage" variable="thisEventStartMessageRequest" createInstance="yes" bpmn:label="Message_Start_Event" name="Message_Start_Event" bpmn:id="_lpG7MGuNEeK7FdvgH5F2kQ"></bpel:receive>
    <bpel:assign name="init-variables-Transcode" bpmn:id="_lpG7MGuNEeK7FdvgH5F2kQ">
      <bpel:copy bpmn:label="$tcTotalFailureTcTotalFailureRequestMsg">
        <bpel:from>
          <bpel:literal>
<wfAdapter:tcTotalFailure>
  <wfAdapter:assetID></wfAdapter:assetID>
  <wfAdapter:forTXDelivery></wfAdapter:forTXDelivery>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:title></wfAdapter:title>
</wfAdapter:tcTotalFailure></bpel:literal>
        </bpel:from>
        <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$autoQCRequiredForTXAutoQcRequiredForTXRequestMsg">
        <bpel:from>
          <bpel:literal>
<autoQCRequiredForTX:taskID_urlType></autoQCRequiredForTX:taskID_urlType></bpel:literal>
        </bpel:from>
        <bpel:to>$autoQCRequiredForTXAutoQcRequiredForTXRequestMsg.taskID</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$deliveryEventStartMessageRequest">
        <bpel:from>
          <bpel:literal>
<Delivery:EventStartMessageRequest>
  <wfAdapter:AO></wfAdapter:AO>
  <wfAdapter:created></wfAdapter:created>
  <wfAdapter:packageID></wfAdapter:packageID>
  <wfAdapter:requiredDate></wfAdapter:requiredDate>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:tcParams>
    <tns:purpose></tns:purpose>
    <tns:resolution></tns:resolution>
    <tns:audioType></tns:audioType>
    <tns:description></tns:description>
    <tns:inputFile></tns:inputFile>
    <tns:outputFolder></tns:outputFolder>
    <tns:outputFileBasename></tns:outputFileBasename>
    <tns:bug>
      <tns:channel></tns:channel>
      <tns:position></tns:position>
      <tns:opacity></tns:opacity>
    </tns:bug>
    <tns:timecode>
      <tns:location></tns:location>
      <tns:size></tns:size>
      <tns:background></tns:background>
      <tns:foreground></tns:foreground>
    </tns:timecode>
    <tns:priority></tns:priority>
    <tns:ftpupload>
      <tns:filename></tns:filename>
      <tns:folder></tns:folder>
      <tns:server></tns:server>
      <tns:user></tns:user>
      <tns:password></tns:password>
    </tns:ftpupload>
  </wfAdapter:tcParams>
  <wfAdapter:title></wfAdapter:title>
</Delivery:EventStartMessageRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$deliveryEventStartMessageRequest.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$auto_QCEventStartMessageRequest">
        <bpel:from>
          <bpel:literal>
<Auto_QC:EventStartMessageRequest>
  <wfAdapter:AO></wfAdapter:AO>
  <wfAdapter:created></wfAdapter:created>
  <wfAdapter:packageID></wfAdapter:packageID>
  <wfAdapter:requiredDate></wfAdapter:requiredDate>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:tcParams>
    <tns:purpose></tns:purpose>
    <tns:resolution></tns:resolution>
    <tns:audioType></tns:audioType>
    <tns:description></tns:description>
    <tns:inputFile></tns:inputFile>
    <tns:outputFolder></tns:outputFolder>
    <tns:outputFileBasename></tns:outputFileBasename>
    <tns:bug>
      <tns:channel></tns:channel>
      <tns:position></tns:position>
      <tns:opacity></tns:opacity>
    </tns:bug>
    <tns:timecode>
      <tns:location></tns:location>
      <tns:size></tns:size>
      <tns:background></tns:background>
      <tns:foreground></tns:foreground>
    </tns:timecode>
    <tns:priority></tns:priority>
    <tns:ftpupload>
      <tns:filename></tns:filename>
      <tns:folder></tns:folder>
      <tns:server></tns:server>
      <tns:user></tns:user>
      <tns:password></tns:password>
    </tns:ftpupload>
  </wfAdapter:tcParams>
  <wfAdapter:title></wfAdapter:title>
</Auto_QC:EventStartMessageRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$auto_QCEventStartMessageRequest.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$isTaskCancelledIsCancelledRequestMsg">
        <bpel:from>
          <bpel:literal>
<isTaskCancelled:taskid_urlType></isTaskCancelled:taskid_urlType></bpel:literal>
        </bpel:from>
        <bpel:to>$isTaskCancelledIsCancelledRequestMsg.taskid</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:assign bpmn:label="Initialise Variables" name="Initialise_Variables" bpmn:id="_pmy4wGuNEeK7FdvgH5F2kQ">
      <bpel:copy>
        <bpel:from>false()</bpel:from>
        <bpel:to>$TranscodeSuccess</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>0</bpel:from>
        <bpel:to>$TranscodeErrorCount</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>false()</bpel:from>
        <bpel:to>$TaskIsCancelled</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>concat(concat($thisEventStartMessageRequest.body/wfAdapter:tcParams/tns:outputFolder/text(), $thisEventStartMessageRequest.body/wfAdapter:tcParams/tns:outputFileBasename/text()), ".gxf")</bpel:from>
        <bpel:to>$TCFilePath</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>"INCOMPLETE"</bpel:from>
        <bpel:to>$TranscodeJobResult</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>""</bpel:from>
        <bpel:to>$TranscodeJobID</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:tcParams/tns:priority/text()</bpel:from>
        <bpel:to>$tcPriority</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:scope bpmn:label="Attempt Transcode three Times" name="Attempt_Transcode_three_Times" bpmn:id="_CaKEsGuOEeK7FdvgH5F2kQ">
      <bpel:variables>
        <bpel:variable name="tcPassedTcPassedRequestMsg" messageType="tcPassed:tcPassed_input"/>
        <bpel:variable name="tcPassedTcPassedResponseMsg" messageType="tcPassed:tcPassed_output"/>
        <bpel:variable name="tcFailureTcFailureRequestMsg" messageType="tcFailure:tcFailure_input"/>
        <bpel:variable name="tcFailureTcFailureResponseMsg" messageType="tcFailure:tcFailure_output"/>
        <bpel:variable name="deleteDeleteRequestMsg" messageType="delete:delete_input"/>
        <bpel:variable name="deleteDeleteResponseMsg" messageType="delete:delete_output"/>
      </bpel:variables>
      <bpel:repeatUntil bpmn:label="Attempt Transcode three Times" name="Attempt_Transcode_three_Times-1">
        <bpel:sequence>
          <bpel:assign name="init-variables-Attempt_Transcode_three_Times" bpmn:id="_CaKEsGuOEeK7FdvgH5F2kQ">
            <bpel:copy bpmn:label="$tcPassedTcPassedRequestMsg">
              <bpel:from>
                <bpel:literal>
<wfAdapter:tcPassedNotification>
  <wfAdapter:assetID></wfAdapter:assetID>
  <wfAdapter:forTXDelivery></wfAdapter:forTXDelivery>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:title></wfAdapter:title>
  <wfAdapter:ftpupload>
    <tns:filename></tns:filename>
    <tns:folder></tns:folder>
    <tns:server></tns:server>
    <tns:user></tns:user>
    <tns:password></tns:password>
  </wfAdapter:ftpupload>
</wfAdapter:tcPassedNotification></bpel:literal>
              </bpel:from>
              <bpel:to>$tcPassedTcPassedRequestMsg.body</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$tcFailureTcFailureRequestMsg">
              <bpel:from>
                <bpel:literal>
<wfAdapter:tcFailureNotification>
  <wfAdapter:assetID></wfAdapter:assetID>
  <wfAdapter:forTXDelivery></wfAdapter:forTXDelivery>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:title></wfAdapter:title>
</wfAdapter:tcFailureNotification></bpel:literal>
              </bpel:from>
              <bpel:to>$tcFailureTcFailureRequestMsg.body</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$deleteDeleteRequestMsg">
              <bpel:from>
                <bpel:literal>
<FSAdapter:deleteRequest>
  <FSAdapter:path></FSAdapter:path>
</FSAdapter:deleteRequest></bpel:literal>
              </bpel:from>
              <bpel:to>$deleteDeleteRequestMsg.body</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:scope bpmn:label="SubProcess" name="SubProcess" bpmn:id="_wzKgIG6_EeKvjs-uExigJg">
            <ext:failureHandling xmlns:ext="http://ode.apache.org/activityRecovery">
              <ext:faultOnFailure>true</ext:faultOnFailure>
            </ext:failureHandling>
            <bpel:variables>
              <bpel:variable name="createJobCreateJobRequestMsg" messageType="createJob:createJob_input"/>
              <bpel:variable name="createJobCreateJobResponseMsg" messageType="createJob:createJob_output"/>
            </bpel:variables>
            <bpel:faultHandlers>
              <bpel:catchAll>
                <bpel:empty bpmn:label="no-activities-for-Error_Intermediate_Event" name="no-activities-for-Error_Intermediate_Event" bpmn:id="_M5stAG7AEeKvjs-uExigJg"/>
              </bpel:catchAll>
            </bpel:faultHandlers>
            <bpel:sequence>
              <bpel:assign name="init-variables-SubProcess" bpmn:id="_wzKgIG6_EeKvjs-uExigJg">
                <bpel:copy bpmn:label="$createJobCreateJobRequestMsg">
                  <bpel:from>
                    <bpel:literal>
<tns:TCJob>
  <tns:purpose></tns:purpose>
  <tns:resolution></tns:resolution>
  <tns:audioType></tns:audioType>
  <tns:description></tns:description>
  <tns:inputFile></tns:inputFile>
  <tns:outputFolder></tns:outputFolder>
  <tns:outputFileBasename></tns:outputFileBasename>
  <tns:bug>
    <tns:channel></tns:channel>
    <tns:position></tns:position>
    <tns:opacity></tns:opacity>
  </tns:bug>
  <tns:timecode>
    <tns:location></tns:location>
    <tns:size></tns:size>
    <tns:background></tns:background>
    <tns:foreground></tns:foreground>
  </tns:timecode>
  <tns:priority></tns:priority>
  <tns:ftpupload>
    <tns:filename></tns:filename>
    <tns:folder></tns:folder>
    <tns:server></tns:server>
    <tns:user></tns:user>
    <tns:password></tns:password>
  </tns:ftpupload>
</tns:TCJob></bpel:literal>
                  </bpel:from>
                  <bpel:to>$createJobCreateJobRequestMsg.body</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:assign bpmn:label="Create Transcode Job" name="Create_Transcode_Job" bpmn:id="_wzNjcG6_EeKvjs-uExigJg">
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:tcParams</bpel:from>
                  <bpel:to>$createJobCreateJobRequestMsg.body</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk0Var" portType="createJob:restInterface" operation="createJob" inputVariable="createJobCreateJobRequestMsg" outputVariable="createJobCreateJobResponseMsg" bpmn:label="Create Transcode Job" name="Create_Transcode_Job-1" bpmn:id="_wzNjcG6_EeKvjs-uExigJg"></bpel:invoke>
              <bpel:assign bpmn:label="map created jobs id to varaible" name="map_created_jobs_id_to_varaible" bpmn:id="_EhsgQG7AEeKvjs-uExigJg">
                <bpel:copy>
                  <bpel:from>$createJobCreateJobResponseMsg.response/text()</bpel:from>
                  <bpel:to>$TranscodeJobID</bpel:to>
                </bpel:copy>
              </bpel:assign>
            </bpel:sequence>
          </bpel:scope>
          <bpel:scope bpmn:label="Poll until job finishes" name="Poll_until_job_finishes" bpmn:id="_a0OKYGuPEeK7FdvgH5F2kQ">
            <ext:failureHandling xmlns:ext="http://ode.apache.org/activityRecovery">
              <ext:faultOnFailure>true</ext:faultOnFailure>
            </ext:failureHandling>
            <bpel:variables>
              <bpel:variable name="queryJobQueryJobRequestMsg" messageType="queryJob:queryJob_input"/>
              <bpel:variable name="queryJobQueryJobResponseMsg" messageType="queryJob:queryJob_output"/>
              <bpel:variable name="isTaskCancelledIsCancelledRequestMsg" messageType="isTaskCancelled:isCancelled_input"/>
              <bpel:variable name="isTaskCancelledIsCancelledResponseMsg" messageType="isTaskCancelled:isCancelled_output"/>
              <bpel:variable name="deleteJobDeleteJobRequestMsg" messageType="deleteJob:deleteJob_input"/>
              <bpel:variable name="deleteJobDeleteJobResponseMsg" messageType="deleteJob:deleteJob_output"/>
              <bpel:variable name="tcGetPriorityGetpriorityRequestMsg" messageType="tcGetPriority:getpriority_input"/>
              <bpel:variable name="tcGetPriorityGetpriorityResponseMsg" messageType="tcGetPriority:getpriority_output"/>
              <bpel:variable name="setPrioritySetPriorityRequestMsg" messageType="setPriority:setPriority_input"/>
              <bpel:variable name="setPrioritySetPriorityResponseMsg" messageType="setPriority:setPriority_output"/>
            </bpel:variables>
            <bpel:faultHandlers>
              <bpel:catchAll>
                <bpel:empty bpmn:label="no-activities-for-Error_Intermediate_Event" name="no-activities-for-Error_Intermediate_Event-1" bpmn:id="_NPiaIG7AEeKvjs-uExigJg"/>
              </bpel:catchAll>
            </bpel:faultHandlers>
            <bpel:repeatUntil bpmn:label="Poll until job finishes" name="Poll_until_job_finishes-1">
              <bpel:sequence>
                <bpel:assign name="init-variables-Poll_until_job_finishes" bpmn:id="_a0OKYGuPEeK7FdvgH5F2kQ">
                  <bpel:copy bpmn:label="$queryJobQueryJobRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<queryJob:guid_urlType></queryJob:guid_urlType></bpel:literal>
                    </bpel:from>
                    <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
                  </bpel:copy>
                  <bpel:copy bpmn:label="$isTaskCancelledIsCancelledRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<isTaskCancelled:taskid_urlType></isTaskCancelled:taskid_urlType></bpel:literal>
                    </bpel:from>
                    <bpel:to>$isTaskCancelledIsCancelledRequestMsg.taskid</bpel:to>
                  </bpel:copy>
                  <bpel:copy bpmn:label="$deleteJobDeleteJobRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<deleteJob:guid_urlType></deleteJob:guid_urlType></bpel:literal>
                    </bpel:from>
                    <bpel:to>$deleteJobDeleteJobRequestMsg.guid</bpel:to>
                  </bpel:copy>
                  <bpel:copy bpmn:label="$tcGetPriorityGetpriorityRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<wfAdapter:getPriorityRequest>
  <wfAdapter:created></wfAdapter:created>
  <wfAdapter:currentPriority></wfAdapter:currentPriority>
  <wfAdapter:jobType></wfAdapter:jobType>
  <wfAdapter:packageID></wfAdapter:packageID>
</wfAdapter:getPriorityRequest></bpel:literal>
                    </bpel:from>
                    <bpel:to>$tcGetPriorityGetpriorityRequestMsg.body</bpel:to>
                  </bpel:copy>
                  <bpel:copy bpmn:label="$setPrioritySetPriorityRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<setPriority:guid_urlType></setPriority:guid_urlType></bpel:literal>
                    </bpel:from>
                    <bpel:to>$setPrioritySetPriorityRequestMsg.guid</bpel:to>
                  </bpel:copy>
                  <bpel:copy bpmn:label="$setPrioritySetPriorityRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<setPriority:priority_urlType></setPriority:priority_urlType></bpel:literal>
                    </bpel:from>
                    <bpel:to>$setPrioritySetPriorityRequestMsg.priority</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:wait bpmn:label="Timer_Intermediate_Event" name="Timer_Intermediate_Event" bpmn:id="_f8z00GuPEeK7FdvgH5F2kQ">
                  <bpel:for>"PT30S"</bpel:for>
                </bpel:wait>
                <bpel:assign bpmn:label="Query Job Status" name="Query_Job_Status" bpmn:id="_a0QmoGuPEeK7FdvgH5F2kQ">
                  <bpel:copy>
                    <bpel:from>$TranscodeJobID</bpel:from>
                    <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk2Var" portType="queryJob:restInterface" operation="queryJob" inputVariable="queryJobQueryJobRequestMsg" outputVariable="queryJobQueryJobResponseMsg" bpmn:label="Query Job Status" name="Query_Job_Status-1" bpmn:id="_a0QmoGuPEeK7FdvgH5F2kQ"></bpel:invoke>
                <bpel:assign bpmn:label="check if cancelled" name="check_if_cancelled" bpmn:id="_PNbR4G66EeKvjs-uExigJg">
                  <bpel:copy>
                    <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
                    <bpel:to>$isTaskCancelledIsCancelledRequestMsg.taskid</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk1Var" portType="isTaskCancelled:restInterface" operation="isCancelled" inputVariable="isTaskCancelledIsCancelledRequestMsg" outputVariable="isTaskCancelledIsCancelledResponseMsg" bpmn:label="check if cancelled" name="check_if_cancelled-1" bpmn:id="_PNbR4G66EeKvjs-uExigJg"></bpel:invoke>
                <bpel:assign bpmn:label="map cancelled result to variable and priority" name="map_cancelled_result_to_variable_and_priority" bpmn:id="_DzHVQG67EeKvjs-uExigJg">
                  <bpel:copy>
                    <bpel:from>$isTaskCancelledIsCancelledResponseMsg.response/text()</bpel:from>
                    <bpel:to>$TaskIsCancelled</bpel:to>
                  </bpel:copy>
                  <bpel:copy>
                    <bpel:from>$queryJobQueryJobResponseMsg.response/tns:priority/text()</bpel:from>
                    <bpel:to>$tcPriority</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:if>
                  <bpel:condition>$TaskIsCancelled = true()</bpel:condition>
                  <bpel:sequence>
                    <bpel:assign bpmn:label="cancelled, stop transcode job" name="cancelled__stop_transcode_job" bpmn:id="_K0I_oG7JEeKkE6ll_3FDMA">
                      <bpel:copy>
                        <bpel:from>$TranscodeJobID</bpel:from>
                        <bpel:to>$deleteJobDeleteJobRequestMsg.guid</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk1Var" portType="deleteJob:restInterface" operation="deleteJob" inputVariable="deleteJobDeleteJobRequestMsg" outputVariable="deleteJobDeleteJobResponseMsg" bpmn:label="cancelled, stop transcode job" name="cancelled__stop_transcode_job-1" bpmn:id="_K0I_oG7JEeKkE6ll_3FDMA"></bpel:invoke>
                  </bpel:sequence>
                  <bpel:else>
                    <bpel:sequence>
                      <bpel:empty bpmn:label="not cancelled" name="not_cancelled" bpmn:id="_M8BSIG7JEeKkE6ll_3FDMA"/>
                      <bpel:assign bpmn:label="query priority" name="query_priority" bpmn:id="_LRJukKaqEeKMKJRBWwHUjA">
                        <bpel:copy>
                          <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:created/text()</bpel:from>
                          <bpel:to>$tcGetPriorityGetpriorityRequestMsg.body/wfAdapter:created</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>$tcPriority</bpel:from>
                          <bpel:to>$tcGetPriorityGetpriorityRequestMsg.body/wfAdapter:currentPriority</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>"TX"</bpel:from>
                          <bpel:to>$tcGetPriorityGetpriorityRequestMsg.body/wfAdapter:jobType</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
                          <bpel:to>$tcGetPriorityGetpriorityRequestMsg.body/wfAdapter:packageID</bpel:to>
                        </bpel:copy>
                      </bpel:assign>
                      <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk3Var" portType="tcGetPriority:restInterface" operation="getpriority" inputVariable="tcGetPriorityGetpriorityRequestMsg" outputVariable="tcGetPriorityGetpriorityResponseMsg" bpmn:label="query priority" name="query_priority-1" bpmn:id="_LRJukKaqEeKMKJRBWwHUjA"></bpel:invoke>
                      <bpel:assign bpmn:label="update var" name="update_var" bpmn:id="_NERSAKaqEeKMKJRBWwHUjA">
                        <bpel:copy>
                          <bpel:from>$tcGetPriorityGetpriorityResponseMsg.response/wfAdapter:priority/text()</bpel:from>
                          <bpel:to>$tcPriority</bpel:to>
                        </bpel:copy>
                      </bpel:assign>
                      <bpel:assign bpmn:label="set priority" name="set_priority" bpmn:id="_Oa8KAKaqEeKMKJRBWwHUjA">
                        <bpel:copy>
                          <bpel:from>$TranscodeJobID</bpel:from>
                          <bpel:to>$setPrioritySetPriorityRequestMsg.guid</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>$tcPriority</bpel:from>
                          <bpel:to>$setPrioritySetPriorityRequestMsg.priority</bpel:to>
                        </bpel:copy>
                      </bpel:assign>
                      <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk3Var" portType="setPriority:restInterface" operation="setPriority" inputVariable="setPrioritySetPriorityRequestMsg" outputVariable="setPrioritySetPriorityResponseMsg" bpmn:label="set priority" name="set_priority-1" bpmn:id="_Oa8KAKaqEeKMKJRBWwHUjA"></bpel:invoke>
                    </bpel:sequence>
                  </bpel:else>
                </bpel:if>
              </bpel:sequence>
              <bpel:condition>($TaskIsCancelled = true()) or ("INCOMPLETE" != $queryJobQueryJobResponseMsg.response/tns:state/text())</bpel:condition>
            </bpel:repeatUntil>
          </bpel:scope>
          <bpel:if>
            <bpel:condition>$TaskIsCancelled = true()</bpel:condition>
            <bpel:sequence>
              <bpel:empty bpmn:label="cancelled" name="cancelled" bpmn:id="_KxhFQG7QEeKkE6ll_3FDMA"/>
              <bpel:assign bpmn:label="Delete Partial Files" name="Delete_Partial_Files" bpmn:id="_IPTy0GuREeK7FdvgH5F2kQ">
                <bpel:copy>
                  <bpel:from>$TCFilePath</bpel:from>
                  <bpel:to>$deleteDeleteRequestMsg.body/FSAdapter:path</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:invoke partnerLink="transcodeAndFsForHttpPortPlkVar" portType="delete:restInterface" operation="delete" inputVariable="deleteDeleteRequestMsg" outputVariable="deleteDeleteResponseMsg" bpmn:label="Delete Partial Files" name="Delete_Partial_Files-1" bpmn:id="_IPTy0GuREeK7FdvgH5F2kQ"></bpel:invoke>
            </bpel:sequence>
            <bpel:else>
              <bpel:sequence>
                <bpel:scope bpmn:label="SubProcess" name="SubProcess-1" bpmn:id="_N9MxYG7AEeKvjs-uExigJg">
                  <ext:failureHandling xmlns:ext="http://ode.apache.org/activityRecovery">
                    <ext:faultOnFailure>true</ext:faultOnFailure>
                  </ext:failureHandling>
                  <bpel:variables>
                    <bpel:variable name="queryJobQueryJobRequestMsg" messageType="queryJob:queryJob_input"/>
                    <bpel:variable name="queryJobQueryJobResponseMsg" messageType="queryJob:queryJob_output"/>
                  </bpel:variables>
                  <bpel:faultHandlers>
                    <bpel:catchAll>
                      <bpel:empty bpmn:label="no-activities-for-Error_Intermediate_Event" name="no-activities-for-Error_Intermediate_Event-2" bpmn:id="_QGEiYG7AEeKvjs-uExigJg"/>
                    </bpel:catchAll>
                  </bpel:faultHandlers>
                  <bpel:sequence>
                    <bpel:assign name="init-variables-SubProcess" bpmn:id="_N9MxYG7AEeKvjs-uExigJg">
                      <bpel:copy bpmn:label="$queryJobQueryJobRequestMsg">
                        <bpel:from>
                          <bpel:literal>
<queryJob:guid_urlType></queryJob:guid_urlType></bpel:literal>
                        </bpel:from>
                        <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                    <bpel:assign bpmn:label="get job result" name="get_job_result" bpmn:id="_GnToQG7IEeKkE6ll_3FDMA">
                      <bpel:copy>
                        <bpel:from>$TranscodeJobID</bpel:from>
                        <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk2Var" portType="queryJob:restInterface" operation="queryJob" inputVariable="queryJobQueryJobRequestMsg" outputVariable="queryJobQueryJobResponseMsg" bpmn:label="get job result" name="get_job_result-1" bpmn:id="_GnToQG7IEeKkE6ll_3FDMA"></bpel:invoke>
                    <bpel:assign bpmn:label="map job result to variable" name="map_job_result_to_variable" bpmn:id="_ah68kG7IEeKkE6ll_3FDMA">
                      <bpel:copy>
                        <bpel:from>$queryJobQueryJobResponseMsg.response/tns:state/text()</bpel:from>
                        <bpel:to>$TranscodeJobResult</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                  </bpel:sequence>
                </bpel:scope>
                <bpel:if>
                  <bpel:condition>"SUCCESS" = $TranscodeJobResult</bpel:condition>
                  <bpel:sequence>
                    <bpel:empty bpmn:label="Transcode Success" name="Transcode_Success" bpmn:id="_W3INQGuQEeK7FdvgH5F2kQ"/>
                    <bpel:assign bpmn:label="Update Success Variable" name="Update_Success_Variable" bpmn:id="_tIhywGuQEeK7FdvgH5F2kQ">
                      <bpel:copy>
                        <bpel:from>true()</bpel:from>
                        <bpel:to>$TranscodeSuccess</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                    <bpel:assign bpmn:label="Send Success Message" name="Send_Success_Message" bpmn:id="_-knPIGuQEeK7FdvgH5F2kQ">
                      <bpel:copy>
                        <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
                        <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:assetID</bpel:to>
                      </bpel:copy>
                      <bpel:copy>
                        <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
                        <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:taskID</bpel:to>
                      </bpel:copy>
                      <bpel:copy>
                        <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title/text()</bpel:from>
                        <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:title</bpel:to>
                      </bpel:copy>
                      <bpel:copy>
                        <bpel:from>true()</bpel:from>
                        <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:forTXDelivery</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk4Var" portType="tcPassed:restInterface" operation="tcPassed" inputVariable="tcPassedTcPassedRequestMsg" outputVariable="tcPassedTcPassedResponseMsg" bpmn:label="Send Success Message" name="Send_Success_Message-1" bpmn:id="_-knPIGuQEeK7FdvgH5F2kQ"></bpel:invoke>
                  </bpel:sequence>
                  <bpel:else>
                    <bpel:sequence>
                      <bpel:empty bpmn:label="Transcode Failure" name="Transcode_Failure" bpmn:id="_YpF6IGuQEeK7FdvgH5F2kQ"/>
                      <bpel:assign bpmn:label="Increment Error Count" name="Increment_Error_Count" bpmn:id="_09wCkGuQEeK7FdvgH5F2kQ">
                        <bpel:copy>
                          <bpel:from>$TranscodeErrorCount + 1</bpel:from>
                          <bpel:to>$TranscodeErrorCount</bpel:to>
                        </bpel:copy>
                      </bpel:assign>
                      <bpel:assign bpmn:label="Send Failure Message" name="Send_Failure_Message" bpmn:id="_Arc_0GuREeK7FdvgH5F2kQ">
                        <bpel:copy>
                          <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
                          <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:taskID</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title/text()</bpel:from>
                          <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:title</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
                          <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:assetID</bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                          <bpel:from>true()</bpel:from>
                          <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:forTXDelivery</bpel:to>
                        </bpel:copy>
                      </bpel:assign>
                      <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk2Var" portType="tcFailure:restInterface" operation="tcFailure" inputVariable="tcFailureTcFailureRequestMsg" outputVariable="tcFailureTcFailureResponseMsg" bpmn:label="Send Failure Message" name="Send_Failure_Message-1" bpmn:id="_Arc_0GuREeK7FdvgH5F2kQ"></bpel:invoke>
                      <bpel:assign bpmn:label="Delete Partial Files" name="Delete_Partial_Files-2" bpmn:id="_IPTy0GuREeK7FdvgH5F2kQ">
                        <bpel:copy>
                          <bpel:from>$TCFilePath</bpel:from>
                          <bpel:to>$deleteDeleteRequestMsg.body/FSAdapter:path</bpel:to>
                        </bpel:copy>
                      </bpel:assign>
                      <bpel:invoke partnerLink="transcodeAndFsForHttpPortPlkVar" portType="delete:restInterface" operation="delete" inputVariable="deleteDeleteRequestMsg" outputVariable="deleteDeleteResponseMsg" bpmn:label="Delete Partial Files" name="Delete_Partial_Files-3" bpmn:id="_IPTy0GuREeK7FdvgH5F2kQ"></bpel:invoke>
                    </bpel:sequence>
                  </bpel:else>
                </bpel:if>
              </bpel:sequence>
            </bpel:else>
          </bpel:if>
        </bpel:sequence>
        <bpel:condition>(($TranscodeSuccess = true()) or ($TranscodeErrorCount&gt;= 3)) or ($TaskIsCancelled = true())</bpel:condition>
      </bpel:repeatUntil>
    </bpel:scope>
    <bpel:if>
      <bpel:condition>$TranscodeSuccess</bpel:condition>
      <bpel:sequence>
        <bpel:empty bpmn:label="Transcode Finished Successfuly" name="Transcode_Finished_Successfuly" bpmn:id="_Q02FQGuREeK7FdvgH5F2kQ"/>
        <bpel:assign bpmn:label="check if cancelled" name="check_if_cancelled-2" bpmn:id="_bfFisG64EeKvjs-uExigJg">
          <bpel:copy>
            <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
            <bpel:to>$isTaskCancelledIsCancelledRequestMsg.taskid</bpel:to>
          </bpel:copy>
        </bpel:assign>
        <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk1Var" portType="isTaskCancelled:restInterface" operation="isCancelled" inputVariable="isTaskCancelledIsCancelledRequestMsg" outputVariable="isTaskCancelledIsCancelledResponseMsg" bpmn:label="check if cancelled" name="check_if_cancelled-3" bpmn:id="_bfFisG64EeKvjs-uExigJg"></bpel:invoke>
        <bpel:if>
          <bpel:condition>true() = $isTaskCancelledIsCancelledResponseMsg.response/text()</bpel:condition>
          <bpel:sequence>
            <bpel:empty bpmn:label="canceled" name="canceled" bpmn:id="_pQKs8G64EeKvjs-uExigJg"/>
            <bpel:empty bpmn:label="Empty_End_Event" name="Empty_End_Event" bpmn:id="_xWbQIG69EeKvjs-uExigJg"/>
          </bpel:sequence>
          <bpel:else>
            <bpel:sequence>
              <bpel:empty bpmn:label="not canceled" name="not_canceled" bpmn:id="_qE8Y0G64EeKvjs-uExigJg"/>
              <bpel:assign bpmn:label="Check If QC Required" name="Check_If_QC_Required" bpmn:id="_ULatkGuTEeK7FdvgH5F2kQ">
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
                  <bpel:to>$autoQCRequiredForTXAutoQcRequiredForTXRequestMsg.taskID</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk0Var" portType="autoQCRequiredForTX:restInterface" operation="autoQcRequiredForTX" inputVariable="autoQCRequiredForTXAutoQcRequiredForTXRequestMsg" outputVariable="autoQCRequiredForTXAutoQcRequiredForTXResponseMsg" bpmn:label="Check If QC Required" name="Check_If_QC_Required-1" bpmn:id="_ULatkGuTEeK7FdvgH5F2kQ"></bpel:invoke>
              <bpel:if>
                <bpel:condition>$autoQCRequiredForTXAutoQcRequiredForTXResponseMsg.autoQcRequiredForTX/text() = true()</bpel:condition>
                <bpel:sequence>
                  <bpel:empty bpmn:label="QC Required" name="QC_Required" bpmn:id="_clWM8GuTEeK7FdvgH5F2kQ"/>
                  <bpel:assign bpmn:label="QC" name="QC" bpmn:id="_0ciuwGuXEeK7FdvgH5F2kQ">
                    <bpel:copy>
                      <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:AO</bpel:from>
                      <bpel:to>$auto_QCEventStartMessageRequest.body/wfAdapter:AO</bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                      <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID</bpel:from>
                      <bpel:to>$auto_QCEventStartMessageRequest.body/wfAdapter:packageID</bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                      <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:requiredDate</bpel:from>
                      <bpel:to>$auto_QCEventStartMessageRequest.body/wfAdapter:requiredDate</bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                      <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:tcParams</bpel:from>
                      <bpel:to>$auto_QCEventStartMessageRequest.body/wfAdapter:tcParams</bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                      <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID</bpel:from>
                      <bpel:to>$auto_QCEventStartMessageRequest.body/wfAdapter:taskID</bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                      <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title</bpel:from>
                      <bpel:to>$auto_QCEventStartMessageRequest.body/wfAdapter:title</bpel:to>
                    </bpel:copy>
                  </bpel:assign>
                  <bpel:invoke partnerLink="auto_QcAndTranscodePlkVar" portType="Auto_QC:ForTranscode" operation="EventStartMessage" inputVariable="auto_QCEventStartMessageRequest" outputVariable="auto_QCEventStartMessageResponse" bpmn:label="QC" name="QC-1" bpmn:id="_0ciuwGuXEeK7FdvgH5F2kQ"></bpel:invoke>
                </bpel:sequence>
                <bpel:else>
                  <bpel:sequence>
                    <bpel:assign bpmn:label="QC not Required" name="QC_not_Required" bpmn:id="_bM2I8GuTEeK7FdvgH5F2kQ">
                      <bpel:copy>
                        <bpel:from>$thisEventStartMessageRequest.body</bpel:from>
                        <bpel:to>$deliveryEventStartMessageRequest.body</bpel:to>
                      </bpel:copy>
                    </bpel:assign>
                  </bpel:sequence>
                </bpel:else>
              </bpel:if>
              <bpel:assign bpmn:label="Deliver" name="Deliver" bpmn:id="_xcqdQGuXEeK7FdvgH5F2kQ">
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body</bpel:from>
                  <bpel:to>$deliveryEventStartMessageRequest.body</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:invoke partnerLink="transcodeAndDeliveryPlkVar" portType="Delivery:ForTranscode" operation="EventStartMessage" inputVariable="deliveryEventStartMessageRequest" outputVariable="deliveryEventStartMessageResponse" bpmn:label="Deliver" name="Deliver-1" bpmn:id="_xcqdQGuXEeK7FdvgH5F2kQ"></bpel:invoke>
              <bpel:empty bpmn:label="Empty_End_Event" name="Empty_End_Event-1" bpmn:id="_avNdkG67EeKvjs-uExigJg"/>
            </bpel:sequence>
          </bpel:else>
        </bpel:if>
      </bpel:sequence>
      <bpel:elseif>
        <bpel:condition>$TaskIsCancelled = true()</bpel:condition>
        <bpel:sequence>
          <bpel:empty bpmn:label="canceled" name="canceled-1" bpmn:id="_pQKs8G64EeKvjs-uExigJg"/>
          <bpel:empty bpmn:label="Empty_End_Event" name="Empty_End_Event-2" bpmn:id="_xWbQIG69EeKvjs-uExigJg"/>
        </bpel:sequence>
      </bpel:elseif>
      <bpel:else>
        <bpel:sequence>
          <bpel:assign bpmn:label="Transcode Failed" name="Transcode_Failed" bpmn:id="_SNxnEGuREeK7FdvgH5F2kQ">
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title/text()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:title</bpel:to>
            </bpel:copy>
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:taskID</bpel:to>
            </bpel:copy>
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:assetID</bpel:to>
            </bpel:copy>
            <bpel:copy>
              <bpel:from>true()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:forTXDelivery</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk5Var" portType="tcTotalFailure:restInterface" operation="tcTotalFailure" inputVariable="tcTotalFailureTcTotalFailureRequestMsg" outputVariable="tcTotalFailureTcTotalFailureResponseMsg" bpmn:label="Transcode Failed" name="Transcode_Failed-1" bpmn:id="_SNxnEGuREeK7FdvgH5F2kQ"></bpel:invoke><bpel:throw faultName="this:Error_End_Event"/>
          
        </bpel:sequence>
      </bpel:else>
    </bpel:if>
  </bpel:sequence>
</bpel:process>