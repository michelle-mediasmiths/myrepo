<?xml version="1.0" encoding="UTF-8"?>
<bpel:process xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:pnlk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ode="http://www.apache.org/ode/type/extension" xmlns:tcFailure="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcFailure.rest" xmlns:tcTotalFailure="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcTotalFailure.rest" xmlns:wfAdapter="http://ns.mediasmiths.com/foxtel/wf/adapter" xmlns:autoQCRequiredForTX="http://ns.mediasmithsforge.com/foxtel/wfAdapter/autoQCRequiredForTX.rest" xmlns:createJob="http://ns.mediasmithsforge.com/foxtel/tcAdapter/createJob.rest" xmlns:queryJob="http://ns.mediasmithsforge.com/foxtel/tcAdapter/queryJob.rest" xmlns:QC="http://ns.mediasmithsforge.com/foxtel/tx-delivery/QC" xmlns:diag="http://ns.mediasmithsforge.com/foxtel/tx-delivery" xmlns:TCAdapter="http://ns.mediasmithsforge.com/foxtel/tx-delivery/TCAdapter" xmlns:tcPassed="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcPassed.rest" xmlns:WFAdapter="http://ns.mediasmithsforge.com/foxtel/tx-delivery/WFAdapter" xmlns:Caller="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Caller" xmlns:Delivery="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Delivery" xmlns:this="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Transcode" xmlns:tns="http://ns.mediasmiths.com/foxtel/tc/adapter" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:bpmn="http://www.intalio.com/bpms" xmlns:atomic="http://ode.apache.org/atomicScope" queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" bpmn:label="Transcode" name="Transcode" bpmn:id="_i0TRQGuNEeK7FdvgH5F2kQ" targetNamespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Transcode">
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tcAdapter/createJob.rest" location="tcAdapter/createJob.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tcAdapter/queryJob.rest" location="tcAdapter/queryJob.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/autoQCRequiredForTX.rest" location="wfAdapter/autoQCRequiredForTX.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcFailure.rest" location="wfAdapter/tcFailure.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcPassed.rest" location="wfAdapter/tcPassed.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/wfAdapter/tcTotalFailure.rest" location="wfAdapter/tcTotalFailure.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery" location="tx-delivery.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Delivery" location="tx-delivery-Delivery.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/QC" location="tx-delivery-QC.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://ns.mediasmithsforge.com/foxtel/tx-delivery/Transcode" location="tx-delivery-Transcode.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:partnerLinks>
    <bpel:partnerLink name="transcodeAndCallerPlkVar" partnerLinkType="diag:TranscodeAndCaller" myRole="Transcode_for_Caller"/>
    <bpel:partnerLink name="transcodeAndTCAdapterForHttpPortPlk0Var" partnerLinkType="diag:TranscodeAndTCAdapterForHttpPortPlk0" initializePartnerRole="yes" partnerRole="TCAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndTCAdapterForHttpPortPlk1Var" partnerLinkType="diag:TranscodeAndTCAdapterForHttpPortPlk1" initializePartnerRole="yes" partnerRole="TCAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk2Var" partnerLinkType="diag:TranscodeAndWFAdapterForHttpPortPlk2" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk1Var" partnerLinkType="diag:TranscodeAndWFAdapterForHttpPortPlk1" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk3Var" partnerLinkType="diag:TranscodeAndWFAdapterForHttpPortPlk3" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndWFAdapterForHttpPortPlk0Var" partnerLinkType="diag:TranscodeAndWFAdapterForHttpPortPlk0" initializePartnerRole="yes" partnerRole="WFAdapter_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndQCPlkVar" partnerLinkType="diag:TranscodeAndQC" initializePartnerRole="yes" partnerRole="QC_for_Transcode"/>
    <bpel:partnerLink name="transcodeAndDeliveryPlkVar" partnerLinkType="diag:TranscodeAndDelivery" initializePartnerRole="yes" partnerRole="Delivery_for_Transcode"/>
  </bpel:partnerLinks>
  <bpel:variables>
    <bpel:variable name="thisEventStartMessageRequest" messageType="this:EventStartMessageRequest"/>
    <bpel:variable name="TranscodeSuccess" type="xs:boolean"/>
    <bpel:variable name="TranscodeErrorCount" type="xs:integer"/>
    <bpel:variable name="tcTotalFailureTcTotalFailureRequestMsg" messageType="tcTotalFailure:tcTotalFailure_input"/>
    <bpel:variable name="tcTotalFailureTcTotalFailureResponseMsg" messageType="tcTotalFailure:tcTotalFailure_output"/>
    <bpel:variable name="autoQCRequiredForTXAutoQcRequiredForTXRequestMsg" messageType="autoQCRequiredForTX:autoQcRequiredForTX_input"/>
    <bpel:variable name="autoQCRequiredForTXAutoQcRequiredForTXResponseMsg" messageType="autoQCRequiredForTX:autoQcRequiredForTX_output"/>
    <bpel:variable name="qCEventStartMessageRequest" messageType="QC:EventStartMessageRequest"/>
    <bpel:variable name="deliveryEventStartMessageRequest" messageType="Delivery:EventStartMessageRequest"/>
  </bpel:variables>
  <bpel:sequence>
    <bpel:receive partnerLink="transcodeAndCallerPlkVar" portType="this:ForCaller" operation="EventStartMessage" variable="thisEventStartMessageRequest" createInstance="yes" bpmn:label="Message_Start_Event" name="Message_Start_Event" bpmn:id="_lpG7MGuNEeK7FdvgH5F2kQ"></bpel:receive>
    <bpel:assign name="init-variables-Transcode" bpmn:id="_lpG7MGuNEeK7FdvgH5F2kQ">
      <bpel:copy bpmn:label="$tcTotalFailureTcTotalFailureRequestMsg">
        <bpel:from>
          <bpel:literal>
<wfAdapter:tcTotalFailure>
  <wfAdapter:assetID></wfAdapter:assetID>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:title></wfAdapter:title>
</wfAdapter:tcTotalFailure></bpel:literal>
        </bpel:from>
        <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$autoQCRequiredForTXAutoQcRequiredForTXRequestMsg">
        <bpel:from>
          <bpel:literal>
<autoQCRequiredForTX:taskID_urlType></autoQCRequiredForTX:taskID_urlType></bpel:literal>
        </bpel:from>
        <bpel:to>$autoQCRequiredForTXAutoQcRequiredForTXRequestMsg.taskID</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$qCEventStartMessageRequest">
        <bpel:from>
          <bpel:literal>
<QC:EventStartMessageRequest>
  <wfAdapter:AO></wfAdapter:AO>
  <wfAdapter:packageID></wfAdapter:packageID>
  <wfAdapter:requiredDate></wfAdapter:requiredDate>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:tcParams>
    <tns:purpose></tns:purpose>
    <tns:resolution></tns:resolution>
    <tns:audioType></tns:audioType>
    <tns:inputFile></tns:inputFile>
    <tns:outputFolder></tns:outputFolder>
    <tns:outputFileBasename></tns:outputFileBasename>
    <tns:bug>
      <tns:channel></tns:channel>
      <tns:position></tns:position>
      <tns:opacity></tns:opacity>
    </tns:bug>
    <tns:timecode>
      <tns:location></tns:location>
      <tns:size></tns:size>
      <tns:background></tns:background>
      <tns:foreground></tns:foreground>
    </tns:timecode>
    <tns:priority></tns:priority>
  </wfAdapter:tcParams>
  <wfAdapter:title></wfAdapter:title>
</QC:EventStartMessageRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$qCEventStartMessageRequest.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$deliveryEventStartMessageRequest">
        <bpel:from>
          <bpel:literal>
<Delivery:EventStartMessageRequest>
  <wfAdapter:AO></wfAdapter:AO>
  <wfAdapter:packageID></wfAdapter:packageID>
  <wfAdapter:requiredDate></wfAdapter:requiredDate>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:tcParams>
    <tns:purpose></tns:purpose>
    <tns:resolution></tns:resolution>
    <tns:audioType></tns:audioType>
    <tns:inputFile></tns:inputFile>
    <tns:outputFolder></tns:outputFolder>
    <tns:outputFileBasename></tns:outputFileBasename>
    <tns:bug>
      <tns:channel></tns:channel>
      <tns:position></tns:position>
      <tns:opacity></tns:opacity>
    </tns:bug>
    <tns:timecode>
      <tns:location></tns:location>
      <tns:size></tns:size>
      <tns:background></tns:background>
      <tns:foreground></tns:foreground>
    </tns:timecode>
    <tns:priority></tns:priority>
  </wfAdapter:tcParams>
  <wfAdapter:title></wfAdapter:title>
</Delivery:EventStartMessageRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$deliveryEventStartMessageRequest.body</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:assign bpmn:label="Initialise Variables" name="Initialise_Variables" bpmn:id="_pmy4wGuNEeK7FdvgH5F2kQ">
      <bpel:copy>
        <bpel:from>false()</bpel:from>
        <bpel:to>$TranscodeSuccess</bpel:to>
      </bpel:copy>
      <bpel:copy>
        <bpel:from>0</bpel:from>
        <bpel:to>$TranscodeErrorCount</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:scope bpmn:label="Attempt Transcode three Times" name="Attempt_Transcode_three_Times" bpmn:id="_CaKEsGuOEeK7FdvgH5F2kQ">
      <bpel:variables>
        <bpel:variable name="createJobCreateJobRequestMsg" messageType="createJob:createJob_input"/>
        <bpel:variable name="createJobCreateJobResponseMsg" messageType="createJob:createJob_output"/>
        <bpel:variable name="queryJobQueryJobRequestMsg" messageType="queryJob:queryJob_input"/>
        <bpel:variable name="queryJobQueryJobResponseMsg" messageType="queryJob:queryJob_output"/>
        <bpel:variable name="tcPassedTcPassedRequestMsg" messageType="tcPassed:tcPassed_input"/>
        <bpel:variable name="tcPassedTcPassedResponseMsg" messageType="tcPassed:tcPassed_output"/>
        <bpel:variable name="tcFailureTcFailureRequestMsg" messageType="tcFailure:tcFailure_input"/>
        <bpel:variable name="tcFailureTcFailureResponseMsg" messageType="tcFailure:tcFailure_output"/>
      </bpel:variables>
      <bpel:repeatUntil bpmn:label="Attempt Transcode three Times" name="Attempt_Transcode_three_Times-1">
        <bpel:sequence>
          <bpel:assign name="init-variables-Attempt_Transcode_three_Times" bpmn:id="_CaKEsGuOEeK7FdvgH5F2kQ">
            <bpel:copy bpmn:label="$createJobCreateJobRequestMsg">
              <bpel:from>
                <bpel:literal>
<tns:TCJob>
  <tns:purpose></tns:purpose>
  <tns:resolution></tns:resolution>
  <tns:audioType></tns:audioType>
  <tns:inputFile></tns:inputFile>
  <tns:outputFolder></tns:outputFolder>
  <tns:outputFileBasename></tns:outputFileBasename>
  <tns:bug>
    <tns:channel></tns:channel>
    <tns:position></tns:position>
    <tns:opacity></tns:opacity>
  </tns:bug>
  <tns:timecode>
    <tns:location></tns:location>
    <tns:size></tns:size>
    <tns:background></tns:background>
    <tns:foreground></tns:foreground>
  </tns:timecode>
  <tns:priority></tns:priority>
</tns:TCJob></bpel:literal>
              </bpel:from>
              <bpel:to>$createJobCreateJobRequestMsg.body</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$queryJobQueryJobRequestMsg">
              <bpel:from>
                <bpel:literal>
<queryJob:guid_urlType></queryJob:guid_urlType></bpel:literal>
              </bpel:from>
              <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$tcPassedTcPassedRequestMsg">
              <bpel:from>
                <bpel:literal>
<wfAdapter:tcPassedNotification>
  <wfAdapter:assetID></wfAdapter:assetID>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:title></wfAdapter:title>
</wfAdapter:tcPassedNotification></bpel:literal>
              </bpel:from>
              <bpel:to>$tcPassedTcPassedRequestMsg.body</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$tcFailureTcFailureRequestMsg">
              <bpel:from>
                <bpel:literal>
<wfAdapter:tcFailureNotification>
  <wfAdapter:assetID></wfAdapter:assetID>
  <wfAdapter:taskID></wfAdapter:taskID>
  <wfAdapter:title></wfAdapter:title>
</wfAdapter:tcFailureNotification></bpel:literal>
              </bpel:from>
              <bpel:to>$tcFailureTcFailureRequestMsg.body</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:assign bpmn:label="Create Transcode Job" name="Create_Transcode_Job" bpmn:id="_CaL54GuOEeK7FdvgH5F2kQ">
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:tcParams</bpel:from>
              <bpel:to>$createJobCreateJobRequestMsg.body</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk0Var" portType="createJob:restInterface" operation="createJob" inputVariable="createJobCreateJobRequestMsg" outputVariable="createJobCreateJobResponseMsg" bpmn:label="Create Transcode Job" name="Create_Transcode_Job-1" bpmn:id="_CaL54GuOEeK7FdvgH5F2kQ"></bpel:invoke>
          <bpel:scope bpmn:label="Poll until job finishes" name="Poll_until_job_finishes" bpmn:id="_a0OKYGuPEeK7FdvgH5F2kQ">
            <bpel:variables>
              <bpel:variable name="queryJobQueryJobRequestMsg" messageType="queryJob:queryJob_input"/>
              <bpel:variable name="queryJobQueryJobResponseMsg" messageType="queryJob:queryJob_output"/>
            </bpel:variables>
            <bpel:repeatUntil bpmn:label="Poll until job finishes" name="Poll_until_job_finishes-1">
              <bpel:sequence>
                <bpel:assign name="init-variables-Poll_until_job_finishes" bpmn:id="_a0OKYGuPEeK7FdvgH5F2kQ">
                  <bpel:copy bpmn:label="$queryJobQueryJobRequestMsg">
                    <bpel:from>
                      <bpel:literal>
<queryJob:guid_urlType></queryJob:guid_urlType></bpel:literal>
                    </bpel:from>
                    <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:wait bpmn:label="Timer_Intermediate_Event" name="Timer_Intermediate_Event" bpmn:id="_f8z00GuPEeK7FdvgH5F2kQ">
                  <bpel:for>"PT10S"</bpel:for>
                </bpel:wait>
                <bpel:assign bpmn:label="Query Job Status" name="Query_Job_Status" bpmn:id="_a0QmoGuPEeK7FdvgH5F2kQ">
                  <bpel:copy>
                    <bpel:from>$createJobCreateJobResponseMsg.response/text()</bpel:from>
                    <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk1Var" portType="queryJob:restInterface" operation="queryJob" inputVariable="queryJobQueryJobRequestMsg" outputVariable="queryJobQueryJobResponseMsg" bpmn:label="Query Job Status" name="Query_Job_Status-1" bpmn:id="_a0QmoGuPEeK7FdvgH5F2kQ"></bpel:invoke>
              </bpel:sequence>
              <bpel:condition>$queryJobQueryJobResponseMsg.response/tns:result/text() != "INCOMPLETE"</bpel:condition>
            </bpel:repeatUntil>
          </bpel:scope>
          <bpel:assign bpmn:label="Check Result" name="Check_Result" bpmn:id="_HWzS8GuQEeK7FdvgH5F2kQ">
            <bpel:copy>
              <bpel:from>$createJobCreateJobResponseMsg.response/text()</bpel:from>
              <bpel:to>$queryJobQueryJobRequestMsg.guid</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:invoke partnerLink="transcodeAndTCAdapterForHttpPortPlk1Var" portType="queryJob:restInterface" operation="queryJob" inputVariable="queryJobQueryJobRequestMsg" outputVariable="queryJobQueryJobResponseMsg" bpmn:label="Check Result" name="Check_Result-1" bpmn:id="_HWzS8GuQEeK7FdvgH5F2kQ"></bpel:invoke>
          <bpel:if>
            <bpel:condition>$queryJobQueryJobResponseMsg.response/tns:result/text() = "SUCCESS"</bpel:condition>
            <bpel:sequence>
              <bpel:empty bpmn:label="Transcode Success" name="Transcode_Success" bpmn:id="_W3INQGuQEeK7FdvgH5F2kQ"/>
              <bpel:assign bpmn:label="Update Success Variable" name="Update_Success_Variable" bpmn:id="_tIhywGuQEeK7FdvgH5F2kQ">
                <bpel:copy>
                  <bpel:from>true()</bpel:from>
                  <bpel:to>$TranscodeSuccess</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:assign bpmn:label="Send Success Message" name="Send_Success_Message" bpmn:id="_-knPIGuQEeK7FdvgH5F2kQ">
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
                  <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:assetID</bpel:to>
                </bpel:copy>
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
                  <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:taskID</bpel:to>
                </bpel:copy>
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title/text()</bpel:from>
                  <bpel:to>$tcPassedTcPassedRequestMsg.body/wfAdapter:title</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk2Var" portType="tcPassed:restInterface" operation="tcPassed" inputVariable="tcPassedTcPassedRequestMsg" outputVariable="tcPassedTcPassedResponseMsg" bpmn:label="Send Success Message" name="Send_Success_Message-1" bpmn:id="_-knPIGuQEeK7FdvgH5F2kQ"></bpel:invoke>
            </bpel:sequence>
            <bpel:else>
              <bpel:sequence>
                <bpel:empty bpmn:label="Transcode Failure" name="Transcode_Failure" bpmn:id="_YpF6IGuQEeK7FdvgH5F2kQ"/>
                <bpel:assign bpmn:label="Increment Error Count" name="Increment_Error_Count" bpmn:id="_09wCkGuQEeK7FdvgH5F2kQ">
                  <bpel:copy>
                    <bpel:from>$TranscodeErrorCount + 1</bpel:from>
                    <bpel:to>$TranscodeErrorCount</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:assign bpmn:label="Send Failure Message" name="Send_Failure_Message" bpmn:id="_Arc_0GuREeK7FdvgH5F2kQ">
                  <bpel:copy>
                    <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
                    <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:taskID</bpel:to>
                  </bpel:copy>
                  <bpel:copy>
                    <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title/text()</bpel:from>
                    <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:title</bpel:to>
                  </bpel:copy>
                  <bpel:copy>
                    <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
                    <bpel:to>$tcFailureTcFailureRequestMsg.body/wfAdapter:assetID</bpel:to>
                  </bpel:copy>
                </bpel:assign>
                <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk1Var" portType="tcFailure:restInterface" operation="tcFailure" inputVariable="tcFailureTcFailureRequestMsg" outputVariable="tcFailureTcFailureResponseMsg" bpmn:label="Send Failure Message" name="Send_Failure_Message-1" bpmn:id="_Arc_0GuREeK7FdvgH5F2kQ"></bpel:invoke>
                <bpel:empty bpmn:label="Delete Partial Files" name="Delete_Partial_Files" bpmn:id="_IPTy0GuREeK7FdvgH5F2kQ"/>
              </bpel:sequence>
            </bpel:else>
          </bpel:if>
        </bpel:sequence>
        <bpel:condition>($TranscodeSuccess = true()) or ($TranscodeErrorCount&gt;= 3)</bpel:condition>
      </bpel:repeatUntil>
    </bpel:scope>
    <bpel:if>
      <bpel:condition>$TranscodeSuccess</bpel:condition>
      <bpel:sequence>
        <bpel:empty bpmn:label="Transcode Finished Successfuly" name="Transcode_Finished_Successfuly" bpmn:id="_Q02FQGuREeK7FdvgH5F2kQ"/>
        <bpel:assign bpmn:label="Check If QC Required" name="Check_If_QC_Required" bpmn:id="_ULatkGuTEeK7FdvgH5F2kQ">
          <bpel:copy>
            <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
            <bpel:to>$autoQCRequiredForTXAutoQcRequiredForTXRequestMsg.taskID</bpel:to>
          </bpel:copy>
        </bpel:assign>
        <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk0Var" portType="autoQCRequiredForTX:restInterface" operation="autoQcRequiredForTX" inputVariable="autoQCRequiredForTXAutoQcRequiredForTXRequestMsg" outputVariable="autoQCRequiredForTXAutoQcRequiredForTXResponseMsg" bpmn:label="Check If QC Required" name="Check_If_QC_Required-1" bpmn:id="_ULatkGuTEeK7FdvgH5F2kQ"></bpel:invoke>
        <bpel:if>
          <bpel:condition>not($autoQCRequiredForTXAutoQcRequiredForTXResponseMsg.autoQcRequiredForTX/text())</bpel:condition>
          <bpel:sequence>
            <bpel:assign bpmn:label="QC not Required" name="QC_not_Required" bpmn:id="_bM2I8GuTEeK7FdvgH5F2kQ">
              <bpel:copy>
                <bpel:from>$thisEventStartMessageRequest.body</bpel:from>
                <bpel:to>$deliveryEventStartMessageRequest.body</bpel:to>
              </bpel:copy>
            </bpel:assign>
            <bpel:invoke partnerLink="transcodeAndDeliveryPlkVar" portType="Delivery:ForTranscode" operation="EventStartMessage" inputVariable="deliveryEventStartMessageRequest" bpmn:label="QC not Required" name="QC_not_Required-1" bpmn:id="_bM2I8GuTEeK7FdvgH5F2kQ"></bpel:invoke>
          </bpel:sequence>
          <bpel:else>
            <bpel:sequence>
              <bpel:assign bpmn:label="QC Required" name="QC_Required" bpmn:id="_clWM8GuTEeK7FdvgH5F2kQ">
                <bpel:copy>
                  <bpel:from>$thisEventStartMessageRequest.body</bpel:from>
                  <bpel:to>$qCEventStartMessageRequest.body</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:invoke partnerLink="transcodeAndQCPlkVar" portType="QC:ForTranscode" operation="EventStartMessage" inputVariable="qCEventStartMessageRequest" bpmn:label="QC Required" name="QC_Required-1" bpmn:id="_clWM8GuTEeK7FdvgH5F2kQ"></bpel:invoke>
            </bpel:sequence>
          </bpel:else>
        </bpel:if>
      </bpel:sequence>
      <bpel:else>
        <bpel:sequence>
          <bpel:assign bpmn:label="Transcode Failed" name="Transcode_Failed" bpmn:id="_SNxnEGuREeK7FdvgH5F2kQ">
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:title/text()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:title</bpel:to>
            </bpel:copy>
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:taskID/text()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:taskID</bpel:to>
            </bpel:copy>
            <bpel:copy>
              <bpel:from>$thisEventStartMessageRequest.body/wfAdapter:packageID/text()</bpel:from>
              <bpel:to>$tcTotalFailureTcTotalFailureRequestMsg.body/wfAdapter:assetID</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:invoke partnerLink="transcodeAndWFAdapterForHttpPortPlk3Var" portType="tcTotalFailure:restInterface" operation="tcTotalFailure" inputVariable="tcTotalFailureTcTotalFailureRequestMsg" outputVariable="tcTotalFailureTcTotalFailureResponseMsg" bpmn:label="Transcode Failed" name="Transcode_Failed-1" bpmn:id="_SNxnEGuREeK7FdvgH5F2kQ"></bpel:invoke><bpel:throw faultName="this:Error_End_Event"/>
          
        </bpel:sequence>
      </bpel:else>
    </bpel:if>
  </bpel:sequence>
</bpel:process>