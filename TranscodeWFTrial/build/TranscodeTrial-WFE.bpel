<?xml version="1.0" encoding="UTF-8"?>
<bpel:process xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop" xmlns:pnlk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ode="http://www.apache.org/ode/type/extension" xmlns:TranscodeService3="http://localhost:8088/TranscodeServiceSOAP/" xmlns:MuleService="http://www.example.org/MuleService/" xmlns:this="http://localhost:8080/TranscodeTrial/WFE" xmlns:Transcoder="http://localhost:8080/TranscodeTrial/Transcoder" xmlns:DropBoxService2="http://localhost:8088/DropBoxService/" xmlns:TranscodeService="http://www.example.org/TranscodeService/" xmlns:QCService="http://localhost:8088/QCService/" xmlns:FTP="http://localhost:8080/FTP" xmlns:QC="http://localhost:8080/TranscodeTrial/QC" xmlns:DropBoxService="http://www.example.org/DropBoxService/" xmlns:TranscodeService1="http://localhost:8080/TranscodeService/" xmlns:QCData="http://localhost:8080/QCData" xmlns:MayamService="http://www.example.org/MayamService/" xmlns:MayamService1="http://localhost:8080/MayamService/" xmlns:Temp_Storage="http://localhost:8080/TranscodeTrial/Temp_Storage" xmlns:Mule="http://localhost:8080/TranscodeTrial/Mule" xmlns:MuleData="http://localhost:8080/MuleData" xmlns:MayamService2="http://localhost:8080/segment" xmlns:DropBoxService1="http://localhost:8080/DropBoxService/" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:TempStorageData="http://www.example.org/TempStorageData" xmlns:xsd2="http://localhost:8088/TXFlagStatus" xmlns:MayamService4="http://localhost:8088/MayamService/" xmlns:TranscodeService2="http://localhost:8088/TranscodeService/" xmlns:Drop_Box="http://localhost:8080/TranscodeTrial/Drop_Box" xmlns:diag="http://localhost:8080/TranscodeTrial" xmlns:tns="http://localhost:8080/TranscodeData" xmlns:TempStorageService="http://localhost:8080/TempStorageService/" xmlns:MuleService1="http://localhost:8080/MuleService/" xmlns:MayamService3="http://localhost:8080/TXFlagStatus" xmlns:Mayam="http://localhost:8080/TranscodeTrial/Mayam" xmlns:bpmn="http://www.intalio.com/bpms" xmlns:atomic="http://ode.apache.org/atomicScope" queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0" bpmn:label="WFE" name="WFE" bpmn:id="_ApyYYOX5EeGXAKE-AHTcWg" targetNamespace="http://localhost:8080/TranscodeTrial/WFE">
  <bpel:import namespace="http://localhost:8080/TempStorageService/" location="TempStorageService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://localhost:8088/DropBoxService/" location="DropBoxService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://localhost:8088/MayamService/" location="MayamService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://localhost:8088/QCService/" location="QCService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://localhost:8088/TranscodeService/" location="TranscodeService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://localhost:8080/TranscodeTrial" location="TranscodeTrial.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:import namespace="http://localhost:8080/TranscodeTrial/WFE" location="TranscodeTrial-WFE.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <bpel:partnerLinks>
    <bpel:partnerLink name="muleAndWFEPlkVar" partnerLinkType="diag:MuleAndWFE" myRole="WFE_for_Mule"/>
    <bpel:partnerLink name="wFeAndTemp_StorageForPortTempStorageServiceSOAPPlkVar" partnerLinkType="diag:WFeAndTemp_StorageForPortTempStorageServiceSOAPPlk" initializePartnerRole="yes" partnerRole="Temp_Storage_for_WFE"/>
    <bpel:partnerLink name="wFeAndTranscoderForPortTranscodeServiceSOAPPlkVar" partnerLinkType="diag:WFeAndTranscoderForPortTranscodeServiceSOAPPlk" initializePartnerRole="yes" partnerRole="Transcoder_for_WFE"/>
    <bpel:partnerLink name="qcAndWFEForPortQCServiceSOAPPlkVar" partnerLinkType="diag:QcAndWFEForPortQCServiceSOAPPlk" initializePartnerRole="yes" partnerRole="QC_for_WFE"/>
    <bpel:partnerLink name="mayamAndWFEForPortMayamServiceSOAPPlkVar" partnerLinkType="diag:MayamAndWFEForPortMayamServiceSOAPPlk" initializePartnerRole="yes" partnerRole="Mayam_for_WFE"/>
    <bpel:partnerLink name="drop_BoxAndWFEForPortDropBoxServiceSOAPPlkVar" partnerLinkType="diag:Drop_BoxAndWFEForPortDropBoxServiceSOAPPlk" initializePartnerRole="yes" partnerRole="Drop_Box_for_WFE"/>
  </bpel:partnerLinks>
  <bpel:variables>
    <bpel:variable name="mayamService4UpdateTXFlagStatusResponseMsg" messageType="MayamService4:UpdateTXFlagStatusResponse"/>
    <bpel:variable name="dropBoxService2ReceiveAssetAndNotifyResponseMsg" messageType="DropBoxService2:ReceiveAssetAndNotifyResponse"/>
    <bpel:variable name="dropBoxService2ReceiveXmlAndNotifyResponseMsg" messageType="DropBoxService2:ReceiveXmlAndNotifyResponse"/>
    <bpel:variable name="dropBoxService2ReceiveAssetAndNotifyRequestMsg" messageType="DropBoxService2:ReceiveAssetAndNotifyRequest"/>
    <bpel:variable name="dropBoxService2ReceiveXmlAndNotifyRequestMsg" messageType="DropBoxService2:ReceiveXmlAndNotifyRequest"/>
    <bpel:variable name="mayamService4UpdateTXFlagStatusRequestMsg" messageType="MayamService4:UpdateTXFlagStatusRequest"/>
    <bpel:variable name="thisStartRequestMsg" messageType="this:StartRequest"/>
    <bpel:variable name="thisStartResponseMsg" messageType="this:StartResponse"/>
    <bpel:variable name="tempStorageServiceCheckIfMediaExistsRequestMsg" messageType="TempStorageService:CheckIfMediaExistsRequest"/>
    <bpel:variable name="tempStorageServiceCheckIfMediaExistsResponseMsg" messageType="TempStorageService:CheckIfMediaExistsResponse"/>
    <bpel:variable name="tempStorageServiceSendToTempRequestMsg" messageType="TempStorageService:SendToTempRequest"/>
    <bpel:variable name="tempStorageServiceSendToTempResponseMsg" messageType="TempStorageService:SendToTempResponse"/>
  </bpel:variables>
  <bpel:sequence>
    <bpel:receive partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartRequestMsg" createInstance="yes" bpmn:label="Start" name="Start" bpmn:id="_0xafEOxBEeGEW4lBUoDdDg"></bpel:receive>
    <bpel:assign name="init-variables-WFE" bpmn:id="_0xafEOxBEeGEW4lBUoDdDg">
      <bpel:copy bpmn:label="$dropBoxService2ReceiveAssetAndNotifyRequestMsg">
        <bpel:from>
          <bpel:literal>
<FTP:assetRequest>
  <FTP:Location></FTP:Location>
</FTP:assetRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$dropBoxService2ReceiveAssetAndNotifyRequestMsg.parameters</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$dropBoxService2ReceiveXmlAndNotifyRequestMsg">
        <bpel:from>
          <bpel:literal>
<FTP:xmlRequest>
  <FTP:Location></FTP:Location>
</FTP:xmlRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$dropBoxService2ReceiveXmlAndNotifyRequestMsg.parameters</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$mayamService4UpdateTXFlagStatusRequestMsg">
        <bpel:from>
          <bpel:literal>
<MayamService3:flagStatus></MayamService3:flagStatus></bpel:literal>
        </bpel:from>
        <bpel:to>$mayamService4UpdateTXFlagStatusRequestMsg.parameters</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$thisStartResponseMsg">
        <bpel:from>
          <bpel:literal>
<this:StartResponse></this:StartResponse></bpel:literal>
        </bpel:from>
        <bpel:to>$thisStartResponseMsg.body</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$tempStorageServiceCheckIfMediaExistsRequestMsg">
        <bpel:from>
          <bpel:literal>
<TempStorageData:existsRequest>
  <TempStorageData:MediaId></TempStorageData:MediaId>
</TempStorageData:existsRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$tempStorageServiceCheckIfMediaExistsRequestMsg.parameters</bpel:to>
      </bpel:copy>
      <bpel:copy bpmn:label="$tempStorageServiceSendToTempRequestMsg">
        <bpel:from>
          <bpel:literal>
<TempStorageData:sendToTempRequest>
  <TempStorageData:Loaction></TempStorageData:Loaction>
  <TempStorageData:MediaName></TempStorageData:MediaName>
  <TempStorageData:MediaId></TempStorageData:MediaId>
</TempStorageData:sendToTempRequest></bpel:literal>
        </bpel:from>
        <bpel:to>$tempStorageServiceSendToTempRequestMsg.parameters</bpel:to>
      </bpel:copy>
    </bpel:assign>
    <bpel:invoke partnerLink="wFeAndTemp_StorageForPortTempStorageServiceSOAPPlkVar" portType="TempStorageService:TempStorageService" operation="CheckIfMediaExists" inputVariable="tempStorageServiceCheckIfMediaExistsRequestMsg" outputVariable="tempStorageServiceCheckIfMediaExistsResponseMsg" bpmn:label="Check temp storage" name="Check_temp_storage" bpmn:id="_x_B1kPGoEeGbS7hnVLk4pQ"></bpel:invoke>
    <bpel:if>
      <bpel:condition>$tempStorageServiceCheckIfMediaExistsResponseMsg.parameters/TempStorageData:Exists = true()</bpel:condition>
      <bpel:empty/>
      <bpel:else>
        <bpel:scope bpmn:label="Transcode" name="Transcode" bpmn:id="_Q8eeEPENEeGiQd0_oA9vGg">
          <bpel:variables>
            <bpel:variable name="thisStartResponseMsg" messageType="this:StartResponse"/>
            <bpel:variable name="transcodeService2TranscodeStatusResponseMsg" messageType="TranscodeService2:TranscodeStatusResponse"/>
            <bpel:variable name="transcodeService2TranscodeFinishedResponseMsg" messageType="TranscodeService2:TranscodeFinishedResponse"/>
            <bpel:variable name="transcodeService2TranscodeFinishedRequestMsg" messageType="TranscodeService2:TranscodeFinishedRequest"/>
            <bpel:variable name="transcodeService2TranscodeStatusRequestMsg" messageType="TranscodeService2:TranscodeStatusRequest"/>
            <bpel:variable name="transcodeService2TranscodeStartRequestMsg" messageType="TranscodeService2:TranscodeStartRequest"/>
            <bpel:variable name="transcodeService2TranscodeStartResponseMsg" messageType="TranscodeService2:TranscodeStartResponse"/>
          </bpel:variables>
          <bpel:faultHandlers>
            <bpel:catchAll>
              <bpel:assign bpmn:label="error" name="error" bpmn:id="_ULCZ4OwtEeGrK-_zkfiVuA">
                <bpel:copy>
                  <bpel:from>"Transcode Failed"</bpel:from>
                  <bpel:to>$thisStartResponseMsg.body</bpel:to>
                </bpel:copy>
              </bpel:assign>
              <bpel:reply partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartResponseMsg" bpmn:label="error" name="error-1" bpmn:id="_ULCZ4OwtEeGrK-_zkfiVuA"></bpel:reply>
            </bpel:catchAll>
          </bpel:faultHandlers>
          <bpel:sequence>
            <bpel:assign name="init-variables-Transcode" bpmn:id="_Q8eeEPENEeGiQd0_oA9vGg">
              <bpel:copy bpmn:label="$thisStartResponseMsg">
                <bpel:from>
                  <bpel:literal>
<this:StartResponse></this:StartResponse></bpel:literal>
                </bpel:from>
                <bpel:to>$thisStartResponseMsg.body</bpel:to>
              </bpel:copy>
              <bpel:copy bpmn:label="$transcodeService2TranscodeFinishedRequestMsg">
                <bpel:from>
                  <bpel:literal>
<tns:transcodeFinishedRequest>
  <tns:transcodeId></tns:transcodeId>
</tns:transcodeFinishedRequest></bpel:literal>
                </bpel:from>
                <bpel:to>$transcodeService2TranscodeFinishedRequestMsg.parameters</bpel:to>
              </bpel:copy>
              <bpel:copy bpmn:label="$transcodeService2TranscodeStatusRequestMsg">
                <bpel:from>
                  <bpel:literal>
<tns:transcodeStatusRequest>
  <tns:transcodeId></tns:transcodeId>
</tns:transcodeStatusRequest></bpel:literal>
                </bpel:from>
                <bpel:to>$transcodeService2TranscodeStatusRequestMsg.parameters</bpel:to>
              </bpel:copy>
              <bpel:copy bpmn:label="$transcodeService2TranscodeStartRequestMsg">
                <bpel:from>
                  <bpel:literal>
<tns:transcodeStartRequest>
  <tns:MediaId></tns:MediaId>
  <tns:MediaName></tns:MediaName>
</tns:transcodeStartRequest></bpel:literal>
                </bpel:from>
                <bpel:to>$transcodeService2TranscodeStartRequestMsg.parameters</bpel:to>
              </bpel:copy>
            </bpel:assign>
            <bpel:invoke partnerLink="wFeAndTranscoderForPortTranscodeServiceSOAPPlkVar" portType="TranscodeService2:TranscodeService" operation="TranscodeStart" inputVariable="transcodeService2TranscodeStartRequestMsg" outputVariable="transcodeService2TranscodeStartResponseMsg" bpmn:label="Invoke Transcode" name="Invoke_Transcode" bpmn:id="_4ufhcObXEeGVL7Jq3_1E2g"></bpel:invoke>
            <bpel:repeatUntil bpmn:label="Receive Status Updates" name="Receive_Status_Updates" bpmn:id="_0sxuIPEMEeGiQd0_oA9vGg">
              <bpel:invoke partnerLink="wFeAndTranscoderForPortTranscodeServiceSOAPPlkVar" portType="TranscodeService2:TranscodeService" operation="TranscodeStatus" inputVariable="transcodeService2TranscodeStatusRequestMsg" outputVariable="transcodeService2TranscodeStatusResponseMsg" bpmn:label="Receive Status Updates" name="Receive_Status_Updates-1" bpmn:id="_0sxuIPEMEeGiQd0_oA9vGg"></bpel:invoke>
              <bpel:condition>$transcodeService2TranscodeStatusResponseMsg.parameters/tns:status = "Finished"</bpel:condition>
            </bpel:repeatUntil>
            <bpel:invoke partnerLink="wFeAndTranscoderForPortTranscodeServiceSOAPPlkVar" portType="TranscodeService2:TranscodeService" operation="TranscodeFinished" inputVariable="transcodeService2TranscodeFinishedRequestMsg" outputVariable="transcodeService2TranscodeFinishedResponseMsg" bpmn:label="Notify" name="Notify" bpmn:id="_4i7gUPEMEeGiQd0_oA9vGg"></bpel:invoke>
          </bpel:sequence>
        </bpel:scope>
      </bpel:else>
    </bpel:if>
    <bpel:if>
      <bpel:condition>false()</bpel:condition>
      <bpel:scope bpmn:label="Quality Control" name="Quality_Control" bpmn:id="_W3RkYPEUEeGiQd0_oA9vGg">
        <bpel:variables>
          <bpel:variable name="thisStartResponseMsg" messageType="this:StartResponse"/>
          <bpel:variable name="qCServiceQCStartRequestMsg" messageType="QCService:QCStartRequest"/>
          <bpel:variable name="qCServiceQCStartResponseMsg" messageType="QCService:QCStartResponse"/>
          <bpel:variable name="qCServiceQCStatusRequestMsg" messageType="QCService:QCStatusRequest"/>
          <bpel:variable name="qCServiceQCStatusResponseMsg" messageType="QCService:QCStatusResponse"/>
          <bpel:variable name="qCServiceQCFinishedRequestMsg" messageType="QCService:QCFinishedRequest"/>
          <bpel:variable name="qCServiceQCFinishedResponseMsg" messageType="QCService:QCFinishedResponse"/>
        </bpel:variables>
        <bpel:faultHandlers>
          <bpel:catchAll>
            <bpel:assign bpmn:label="error" name="error-2" bpmn:id="_NQRKsOwuEeGrK-_zkfiVuA">
              <bpel:copy>
                <bpel:from>"QC Failed"</bpel:from>
                <bpel:to>$thisStartResponseMsg.body</bpel:to>
              </bpel:copy>
            </bpel:assign>
            <bpel:reply partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartResponseMsg" bpmn:label="error" name="error-3" bpmn:id="_NQRKsOwuEeGrK-_zkfiVuA"></bpel:reply>
          </bpel:catchAll>
        </bpel:faultHandlers>
        <bpel:sequence>
          <bpel:assign name="init-variables-Quality_Control" bpmn:id="_W3RkYPEUEeGiQd0_oA9vGg">
            <bpel:copy bpmn:label="$thisStartResponseMsg">
              <bpel:from>
                <bpel:literal>
<this:StartResponse></this:StartResponse></bpel:literal>
              </bpel:from>
              <bpel:to>$thisStartResponseMsg.body</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$qCServiceQCStartRequestMsg">
              <bpel:from>
                <bpel:literal>
<QCData:qcStartRequest>
  <QCData:DataLocation></QCData:DataLocation>
</QCData:qcStartRequest></bpel:literal>
              </bpel:from>
              <bpel:to>$qCServiceQCStartRequestMsg.parameters</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$qCServiceQCStatusRequestMsg">
              <bpel:from>
                <bpel:literal>
<QCData:qcStatusRequest></QCData:qcStatusRequest></bpel:literal>
              </bpel:from>
              <bpel:to>$qCServiceQCStatusRequestMsg.parameters</bpel:to>
            </bpel:copy>
            <bpel:copy bpmn:label="$qCServiceQCFinishedRequestMsg">
              <bpel:from>
                <bpel:literal>
<QCData:qcFinishedRequest></QCData:qcFinishedRequest></bpel:literal>
              </bpel:from>
              <bpel:to>$qCServiceQCFinishedRequestMsg.parameters</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:invoke partnerLink="qcAndWFEForPortQCServiceSOAPPlkVar" portType="QCService:QCService" operation="QCStart" inputVariable="qCServiceQCStartRequestMsg" outputVariable="qCServiceQCStartResponseMsg" bpmn:label="Invoke QC" name="Invoke_QC" bpmn:id="_W3ZgMPEUEeGiQd0_oA9vGg"></bpel:invoke>
          <bpel:repeatUntil bpmn:label="QC Status" name="QC_Status" bpmn:id="_rs0P4PEUEeGiQd0_oA9vGg">
            <bpel:invoke partnerLink="qcAndWFEForPortQCServiceSOAPPlkVar" portType="QCService:QCService" operation="QCStatus" inputVariable="qCServiceQCStatusRequestMsg" outputVariable="qCServiceQCStatusResponseMsg" bpmn:label="QC Status" name="QC_Status-1" bpmn:id="_rs0P4PEUEeGiQd0_oA9vGg"></bpel:invoke>
            <bpel:condition>"Finished" = $qCServiceQCStatusResponseMsg.parameters/QCData:Status</bpel:condition>
          </bpel:repeatUntil>
          <bpel:invoke partnerLink="qcAndWFEForPortQCServiceSOAPPlkVar" portType="QCService:QCService" operation="QCFinished" inputVariable="qCServiceQCFinishedRequestMsg" outputVariable="qCServiceQCFinishedResponseMsg" bpmn:label="Validate Report" name="Validate_Report" bpmn:id="_A-4fUPEVEeGiQd0_oA9vGg"></bpel:invoke>
        </bpel:sequence>
      </bpel:scope>
    </bpel:if>
    <bpel:scope bpmn:label="XML Generation" name="XML_Generation" bpmn:id="_OR_m0PGnEeGbS7hnVLk4pQ">
      <bpel:variables>
        <bpel:variable name="mayamService4SendSegmentMetadataResponseMsg" messageType="MayamService4:SendSegmentMetadataResponse"/>
        <bpel:variable name="mayamService4SendSegmentMetadataRequestMsg" messageType="MayamService4:SendSegmentMetadataRequest"/>
        <bpel:variable name="thisStartResponseMsg" messageType="this:StartResponse"/>
      </bpel:variables>
      <bpel:faultHandlers>
        <bpel:catchAll>
          <bpel:assign bpmn:label="error" name="error-4" bpmn:id="_TyXlwOwuEeGrK-_zkfiVuA">
            <bpel:copy>
              <bpel:from>"Failed: XML not generated correctly"</bpel:from>
              <bpel:to>$thisStartResponseMsg.body</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:reply partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartResponseMsg" bpmn:label="error" name="error-5" bpmn:id="_TyXlwOwuEeGrK-_zkfiVuA"></bpel:reply>
        </bpel:catchAll>
      </bpel:faultHandlers>
      <bpel:sequence>
        <bpel:assign name="init-variables-XML_Generation" bpmn:id="_OR_m0PGnEeGbS7hnVLk4pQ">
          <bpel:copy bpmn:label="$mayamService4SendSegmentMetadataRequestMsg">
            <bpel:from>
              <bpel:literal>
<MayamService2:segmentRequest>
  <MayamService2:NewElement></MayamService2:NewElement>
</MayamService2:segmentRequest></bpel:literal>
            </bpel:from>
            <bpel:to>$mayamService4SendSegmentMetadataRequestMsg.parameters</bpel:to>
          </bpel:copy>
          <bpel:copy bpmn:label="$thisStartResponseMsg">
            <bpel:from>
              <bpel:literal>
<this:StartResponse></this:StartResponse></bpel:literal>
            </bpel:from>
            <bpel:to>$thisStartResponseMsg.body</bpel:to>
          </bpel:copy>
        </bpel:assign>
        <bpel:invoke partnerLink="mayamAndWFEForPortMayamServiceSOAPPlkVar" portType="MayamService4:MayamService" operation="SendSegmentMetadata" inputVariable="mayamService4SendSegmentMetadataRequestMsg" outputVariable="mayamService4SendSegmentMetadataResponseMsg" bpmn:label="Generate Segment XML" name="Generate_Segment_XML" bpmn:id="_obl94ObbEeGVL7Jq3_1E2g"></bpel:invoke>
        <bpel:empty bpmn:label="XML Validation" name="XML_Validation" bpmn:id="_UjahkPGnEeGbS7hnVLk4pQ"/>
      </bpel:sequence>
    </bpel:scope>
    <bpel:invoke partnerLink="drop_BoxAndWFEForPortDropBoxServiceSOAPPlkVar" portType="DropBoxService2:DropBoxService" operation="ReceiveAssetAndNotify" inputVariable="dropBoxService2ReceiveAssetAndNotifyRequestMsg" outputVariable="dropBoxService2ReceiveAssetAndNotifyResponseMsg" bpmn:label="FTP asset to AMY folder" name="FTP_asset_to_AMY_folder" bpmn:id="_3iingObeEeGVL7Jq3_1E2g"></bpel:invoke>
    <bpel:invoke partnerLink="drop_BoxAndWFEForPortDropBoxServiceSOAPPlkVar" portType="DropBoxService2:DropBoxService" operation="ReceiveXmlAndNotify" inputVariable="dropBoxService2ReceiveXmlAndNotifyRequestMsg" outputVariable="dropBoxService2ReceiveXmlAndNotifyResponseMsg" bpmn:label="FTP xml to AMY folder" name="FTP_xml_to_AMY_folder" bpmn:id="_inulAObfEeGVL7Jq3_1E2g"></bpel:invoke>
    <bpel:if>
      <bpel:condition>true() = $dropBoxService2ReceiveAssetAndNotifyResponseMsg.parameters/FTP:Received</bpel:condition>
      <bpel:if>
        <bpel:condition>true() = $dropBoxService2ReceiveXmlAndNotifyResponseMsg.parameters/FTP:Received</bpel:condition>
        <bpel:sequence>
          <bpel:invoke partnerLink="wFeAndTemp_StorageForPortTempStorageServiceSOAPPlkVar" portType="TempStorageService:TempStorageService" operation="SendToTemp" inputVariable="tempStorageServiceSendToTempRequestMsg" outputVariable="tempStorageServiceSendToTempResponseMsg" bpmn:label="Move transient assets and xml to temp storage" name="Move_transient_assets_and_xml_to_temp_storage" bpmn:id="_O6OZUOYTEeGYCvzfuWhYqg"></bpel:invoke>
          <bpel:invoke partnerLink="mayamAndWFEForPortMayamServiceSOAPPlkVar" portType="MayamService4:MayamService" operation="UpdateTXFlagStatus" inputVariable="mayamService4UpdateTXFlagStatusRequestMsg" outputVariable="mayamService4UpdateTXFlagStatusResponseMsg" bpmn:label="Set TX flag" name="Set_TX_flag" bpmn:id="__CjgkOYTEeGYCvzfuWhYqg"></bpel:invoke>
          <bpel:empty bpmn:label="Close TX delivery task" name="Close_TX_delivery_task" bpmn:id="_SLQ20OYUEeGYCvzfuWhYqg"/>
          <bpel:assign bpmn:label="Message_End_Event" name="Message_End_Event" bpmn:id="_3RvGwOxBEeGEW4lBUoDdDg">
            <bpel:copy>
              <bpel:from>"Successful"</bpel:from>
              <bpel:to>$thisStartResponseMsg.body</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:reply partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartResponseMsg" bpmn:label="Message_End_Event" name="Message_End_Event-1" bpmn:id="_3RvGwOxBEeGEW4lBUoDdDg"></bpel:reply>
        </bpel:sequence>
        <bpel:else>
          <bpel:sequence>
            <bpel:assign bpmn:label="error" name="error-6" bpmn:id="_buQeQOwuEeGrK-_zkfiVuA">
              <bpel:copy>
                <bpel:from>"Failed: XML wasn't Received"</bpel:from>
                <bpel:to>$thisStartResponseMsg.body</bpel:to>
              </bpel:copy>
            </bpel:assign>
            <bpel:reply partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartResponseMsg" bpmn:label="error" name="error-7" bpmn:id="_buQeQOwuEeGrK-_zkfiVuA"></bpel:reply>
          </bpel:sequence>
        </bpel:else>
      </bpel:if>
      <bpel:else>
        <bpel:sequence>
          <bpel:assign bpmn:label="error" name="error-8" bpmn:id="_YfWSQOwuEeGrK-_zkfiVuA">
            <bpel:copy>
              <bpel:from>"Failed: Asset wasn't received"</bpel:from>
              <bpel:to>$thisStartResponseMsg.body</bpel:to>
            </bpel:copy>
          </bpel:assign>
          <bpel:reply partnerLink="muleAndWFEPlkVar" portType="this:ForMule" operation="Start" variable="thisStartResponseMsg" bpmn:label="error" name="error-9" bpmn:id="_YfWSQOwuEeGrK-_zkfiVuA"></bpel:reply>
        </bpel:sequence>
      </bpel:else>
    </bpel:if>
  </bpel:sequence>
</bpel:process>